@use "variables.scss" as var;
@use "mixins.scss" as mi;

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
html {
    font-family: 'DM Sans', sans-serif;
}

.body {
    width: 100vw;
    min-height: 100vh;
    padding: 4em 0;
    background-color: var.$cream;
    @include mi.flex-col(3em);
    justify-content: center;
    align-items: center;
    &-cards {
        @include mi.flex-col(2em);
        width: 85%;
        max-width: 550px;
        &-balance {
            @include mi.card-style(var.$soft-red, 1.5em);
            @include mi.grid-btw;
            grid-template: 
            "a b"
            "c b";
            &-title {
                @include mi.small-text-style(var.$very-pale-orange);
                grid-area: a;
            }
            &-number {
                @include mi.text-style(var.$very-pale-orange, var.$step--1, 700);
                grid-area: c;
            }
            &-icon {
                grid-area: b;
            }
        }
        &-graph {
            @include mi.flex-col(2.2em);
            @include mi.card-style(var.$very-pale-orange);
            &-title {
                @include mi.text-style(var.$dark-brown, var.$step-1, 700);
            }
            &-display {
                display: flex;
                justify-content: space-between;
                &-column {
                    @include mi.flex-col-end(1em);
                    width: 12%;
                    &-number {
                        padding: 0.3em 0.6em;
                        border-radius: 5px;
                        background-color: var.$dark-brown;
                        @include mi.text-style(var.$very-pale-orange, var.$step--2, 700);
                        order: 1;
                        visibility: hidden;
                    }
                    &-text {
                        @include mi.text-style(var.$medium-brown, var.$step--3, 400);
                        order: 3;
                    }
                    &-draw {
                        border-radius: 5px;
                        // height: 10em;
                        width: 90%;
                        background-color: var.$soft-red;
                        order: 2;
                        &:hover {
                            cursor: pointer;
                            opacity: 0.6;
                        }
                    }
                    &-draw:hover +  &-number {
                        visibility: visible;
                    }
    
                }
            }
            & hr {
                height: 0.2em;
                border: none;

                // color the line
                color: var.$cream;
                background-color: var.$cream;

                border-radius: 10px;
            }
            &-footer {
                @include mi.grid-btw;
                grid-template: 
                "a ."
                "b c"
                "b d";
                &-text1 {
                    grid-area: a;
                    @include mi.small-text-style;
                }
                &-number {
                    grid-area: b;
                    @include mi.text-style(var.$dark-brown, var.$step-0, 700);
                }
                &-percent {
                    grid-area: c;
                    justify-self: flex-end;
                    @include mi.text-style(var.$dark-brown, var.$step--2, 700);
                }
                &-text2 {
                    grid-area: d;
                    @include mi.small-text-style;
                }
            }
        }
    }
}
#wed {
    background-color: var.$cyan;
}
@media screen and (min-width: 768px) {
    .body {
        &-cards {
            width: 60%;
            max-width: 800px;
            min-width: 500px;
            &-balance, &-graph {
                padding-left: 3em;
                padding-right: 3em;
            }
        }
    }
}
@media screen and (min-width: 1440px){
    .body {
        &-cards {
            max-width: 500px;
        }
    }
}